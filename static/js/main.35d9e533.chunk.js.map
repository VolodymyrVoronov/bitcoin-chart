{"version":3,"sources":["redux/actions/actionTypes.js","helpers/makeActionCreator.js","redux/actions/actions.js","helpers/const.js","api/api.js","redux/reducers/app.js","redux/reducers/rootReducer.js","redux/store.js","components/ToggleDarkMode/ToggleDarkMode.jsx","components/TimePeriods/TimePeriods.styled.js","helpers/getStartDay.js","helpers/getEndDate.js","components/TimePeriods/TimePeriods.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","components/CoinChart/CoinChart.styled.js","components/CoinChart/CoinChart.jsx","components/UI/Preloader/Preloader.styled.js","components/UI/Preloader/Preloader.jsx","components/App/App.styled.js","components/App/App.jsx","styles/globalStyles.js","index.js"],"names":["ActionType","makeActionCreator","type","argNames","args","action","forEach","arg","index","getChartDataAC","isChartDataLoadingAC","STATUS_CODE","times","id","timePeriod","numberOfDays","instanceAPI","axios","baseURL","appAPI","startDate","endDate","get","initialState","chartData","isChartDataLoading","getChartData","dispatch","a","response","status","data","bpi","console","log","appReducer","state","rootReducer","combineReducers","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ToggleDarkMode","React","useState","isDarkMode","setIsDarkMode","onChange","checked","size","speed","TimePeriodsContainer","styled","div","TimePeriod","button","props","activeTime","getStartDate","Date","toISOString","slice","getEndDate","days","d","x","setDate","getDate","TimePeriods","useDispatch","setActiveTime","map","time","onClick","toString","onTimeClick","AppHeader","header","ToggleContainer","section","Header","ChartContainer","CoinChart","useSelector","labels","Object","keys","key","toLocaleDateString","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","values","options","legend","display","ldsRipple","keyframes","PreloaderContainer","PreloaderBody","PreloaderBlockOne","PreloaderBlockTwo","Preloader","AppContainer","App","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35d9e533.chunk.js","sourcesContent":["export const ActionType = {\r\n  GET_CHART_DATA: `GET_CHART_DATA`,\r\n  LOADING_CHART_DATA: `LOADING_CHART_DATA`,\r\n};\r\n","export const makeActionCreator = (type, ...argNames) => {\r\n  return (...args) => {\r\n    const action = { type };\r\n    argNames.forEach((arg, index) => {\r\n      action[argNames[index]] = args[index];\r\n    });\r\n    return action;\r\n  };\r\n};\r\n","import { makeActionCreator } from \"./../../helpers/makeActionCreator\";\r\n\r\nimport { ActionType } from \"./actionTypes\";\r\n\r\nexport const getChartDataAC = makeActionCreator(\r\n  ActionType.GET_CHART_DATA,\r\n  `chartData`\r\n);\r\n\r\nexport const isChartDataLoadingAC = makeActionCreator(\r\n  ActionType.LOADING_CHART_DATA,\r\n  `isChartDataLoading`\r\n);\r\n","export const apiBody = `https://api.coindesk.com/v1/`;\r\n\r\nexport const STATUS_CODE = {\r\n  SUCCESS: 200,\r\n};\r\n\r\nexport const times = [\r\n  { id: 1, timePeriod: \"1w\", numberOfDays: 7 },\r\n  { id: 2, timePeriod: \"2w\", numberOfDays: 14 },\r\n  { id: 3, timePeriod: \"1m\", numberOfDays: 30 },\r\n  { id: 4, timePeriod: \"2m\", numberOfDays: 60 },\r\n  { id: 5, timePeriod: \"3m\", numberOfDays: 90 },\r\n  { id: 6, timePeriod: \"6m\", numberOfDays: 180 },\r\n  { id: 7, timePeriod: \"1y\", numberOfDays: 365 },\r\n  { id: 8, timePeriod: \"2y\", numberOfDays: 730 },\r\n];\r\n","import * as axios from \"axios\";\r\n\r\nimport { apiBody } from \"../helpers/const\";\r\n\r\nconst instanceAPI = axios.create({\r\n  baseURL: apiBody,\r\n});\r\n\r\nexport const appAPI = {\r\n  getChartData(startDate, endDate) {\r\n    return instanceAPI.get(\r\n      `bpi/historical/close.json?start=${startDate}&end=${endDate}`\r\n    );\r\n  },\r\n};\r\n","import { ActionType } from \"../actions/actionTypes\";\r\n\r\nimport { getChartDataAC, isChartDataLoadingAC } from \"./../actions/actions\";\r\n\r\nimport { appAPI } from \"./../../api/api\";\r\n\r\nimport { STATUS_CODE } from \"./../../helpers/const\";\r\n\r\nconst initialState = {\r\n  chartData: [],\r\n  isChartDataLoading: false,\r\n  startDate: 1,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.GET_CHART_DATA: {\r\n      return {\r\n        ...state,\r\n        chartData: action.chartData,\r\n      };\r\n    }\r\n\r\n    case ActionType.LOADING_CHART_DATA: {\r\n      return {\r\n        ...state,\r\n        isChartDataLoading: action.isChartDataLoading,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunks\r\nexport const getChartData = (startDate, endDate) => async (dispatch) => {\r\n  try {\r\n    dispatch(isChartDataLoadingAC(true));\r\n    const response = await appAPI.getChartData(startDate, endDate);\r\n    if (response.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getChartDataAC(response.data.bpi));\r\n      dispatch(isChartDataLoadingAC(false));\r\n    }\r\n  } catch (error) {\r\n    // dispatch(getIsErrorAC(true));\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport app from \"./app\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\n\r\nconst ToggleDarkMode = () => {\r\n  const [isDarkMode, setIsDarkMode] = React.useState(() => false);\r\n  console.log(isDarkMode);\r\n\r\n  return (\r\n    <DarkModeToggle\r\n      onChange={setIsDarkMode}\r\n      checked={isDarkMode}\r\n      size={80}\r\n      speed={1.5}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ToggleDarkMode;\r\n","import styled from \"styled-components\";\r\n\r\nconst TimePeriodsContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TimePeriod = styled.button`\r\n  display: flex;\r\n\r\n  margin: 0 2px;\r\n  padding: 8px 25px;\r\n\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n  font-weight: 500;\r\n  color: ${(props) => (props.activeTime ? `#ffffff` : `#000000`)};\r\n\r\n  background-color: ${(props) =>\r\n    props.activeTime ? `#69c7ff` : `transparent`};\r\n\r\n  border-radius: 25px;\r\n\r\n  transition: 0.3s ease;\r\n\r\n  outline: none;\r\n  border: none;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n\r\n    cursor: pointer;\r\n\r\n    background-color: #69c7ff;\r\n\r\n    transition: 0.3s ease;\r\n  }\r\n`;\r\n\r\nexport { TimePeriodsContainer, TimePeriod };\r\n","export const getStartDate = () => {\r\n  const d = new Date(); // today!\r\n\r\n  return d.toISOString().slice(0, 10);\r\n};\r\n","export const getEndDate = (days) => {\r\n  const d = new Date(); // today!\r\n\r\n  const x = days; // go back X days!\r\n  d.setDate(d.getDate() - x);\r\n\r\n  return d.toISOString().slice(0, 10);\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getChartData } from \"./../../redux/reducers/app\";\r\n\r\nimport { times } from \"./../../helpers/const\";\r\n\r\nimport { TimePeriodsContainer, TimePeriod } from \"./TimePeriods.styled\";\r\nimport { getStartDate } from \"./../../helpers/getStartDay\";\r\nimport { getEndDate } from \"./../../helpers/getEndDate\";\r\n\r\nconst TimePeriods = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeTime, setActiveTime] = React.useState(1);\r\n\r\n  const onTimeClick = (id, numberOfDays) => {\r\n    setActiveTime(id);\r\n\r\n    dispatch(getChartData(getEndDate(numberOfDays), getStartDate().toString()));\r\n  };\r\n\r\n  return (\r\n    <TimePeriodsContainer>\r\n      {times.map((time) => {\r\n        const { id, timePeriod, numberOfDays } = time;\r\n\r\n        return (\r\n          <TimePeriod\r\n            onClick={() => onTimeClick(id, numberOfDays)}\r\n            key={id}\r\n            activeTime={activeTime === id}\r\n          >\r\n            {timePeriod}\r\n          </TimePeriod>\r\n        );\r\n      })}\r\n    </TimePeriodsContainer>\r\n  );\r\n};\r\n\r\nexport default TimePeriods;\r\n","import styled from \"styled-components\";\r\n\r\nconst AppHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  width: 1200px;\r\n\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ToggleContainer = styled.section`\r\n  display: flex;\r\n`;\r\n\r\nconst TimePeriodsContainer = styled.section`\r\n  display: flex;\r\n`;\r\n\r\nexport { AppHeader, ToggleContainer, TimePeriodsContainer };\r\n","import React from \"react\";\r\n\r\nimport ToggleDarkMode from \"./../ToggleDarkMode/ToggleDarkMode\";\r\nimport TimePeriods from \"../TimePeriods/TimePeriods\";\r\n\r\nimport {\r\n  AppHeader,\r\n  ToggleContainer,\r\n  TimePeriodsContainer,\r\n} from \"./Header.styled\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppHeader>\r\n      <ToggleContainer>\r\n        <ToggleDarkMode />\r\n      </ToggleContainer>\r\n      <TimePeriodsContainer>\r\n        <TimePeriods />\r\n      </TimePeriodsContainer>\r\n    </AppHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst ChartContainer = styled.div`\r\n  display: flex;\r\n\r\n  width: 1200px;\r\n\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nexport { ChartContainer };\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { ChartContainer } from \"./CoinChart.styled\";\r\n\r\nconst CoinChart = () => {\r\n  const { chartData } = useSelector(({ app }) => app);\r\n\r\n  const data = {\r\n    labels: Object.keys(chartData).map((key) =>\r\n      new Date(key).toLocaleDateString()\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#69c7ff\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#69c7ff\",\r\n        pointBackgroundColor: \"#84d2ff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#69c7ff\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 2,\r\n        pointHitRadius: 10,\r\n        data: Object.values(chartData),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <Line data={data} options={options} />\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default CoinChart;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ldsRipple = keyframes`\r\n  0% {\r\n    top: 36px;\r\n    left: 36px;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 72px;\r\n    height: 72px;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst PreloaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  width: 1200px;\r\n\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nconst PreloaderBody = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst PreloaderBlockOne = styled.div`\r\n  position: absolute;\r\n  border: 4px solid #69c7ff;\r\n  opacity: 1;\r\n  border-radius: 50%;\r\n  animation: ${ldsRipple} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n`;\r\n\r\nconst PreloaderBlockTwo = styled.div`\r\n  position: absolute;\r\n  border: 4px solid #69c7ff;\r\n  opacity: 1;\r\n  border-radius: 50%;\r\n  animation: ${ldsRipple} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n  animation-delay: -0.5s;\r\n`;\r\n\r\nexport {\r\n  PreloaderContainer,\r\n  PreloaderBody,\r\n  PreloaderBlockOne,\r\n  PreloaderBlockTwo,\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n  PreloaderContainer,\r\n  PreloaderBody,\r\n  PreloaderBlockOne,\r\n  PreloaderBlockTwo,\r\n} from \"./Preloader.styled\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <PreloaderContainer>\r\n      <PreloaderBody>\r\n        <PreloaderBlockOne></PreloaderBlockOne>\r\n        <PreloaderBlockTwo></PreloaderBlockTwo>\r\n      </PreloaderBody>\r\n    </PreloaderContainer>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import styled from \"styled-components\";\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  font-family: \"Lato\", \"Roboto\", \"Arial\", sans-serif;\r\n`;\r\n\r\nexport { AppContainer };\r\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Header/Header\";\nimport CoinChart from \"../CoinChart/CoinChart\";\nimport Preloader from \"./../UI/Preloader/Preloader\";\n\nimport { AppContainer } from \"./App.styled\";\n\nconst App = () => {\n  const { isChartDataLoading } = useSelector(({ app }) => app);\n\n  return (\n    <AppContainer>\n      <Header />\n      {isChartDataLoading ? <Preloader /> : <CoinChart />}\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html,\r\n  body,\r\n  div,\r\n  span,\r\n  applet,\r\n  object,\r\n  iframe,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6,\r\n  p,\r\n  blockquote,\r\n  pre,\r\n  a,\r\n  abbr,\r\n  acronym,\r\n  address,\r\n  big,\r\n  cite,\r\n  code,\r\n  del,\r\n  dfn,\r\n  em,\r\n  img,\r\n  ins,\r\n  kbd,\r\n  q,\r\n  s,\r\n  samp,\r\n  small,\r\n  strike,\r\n  strong,\r\n  sub,\r\n  sup,\r\n  tt,\r\n  var,\r\n  b,\r\n  u,\r\n  i,\r\n  center,\r\n  dl,\r\n  dt,\r\n  dd,\r\n  ol,\r\n  ul,\r\n  li,\r\n  fieldset,\r\n  form,\r\n  label,\r\n  legend,\r\n  table,\r\n  caption,\r\n  tbody,\r\n  tfoot,\r\n  thead,\r\n  tr,\r\n  th,\r\n  td,\r\n  article,\r\n  aside,\r\n  canvas,\r\n  details,\r\n  embed,\r\n  figure,\r\n  figcaption,\r\n  footer,\r\n  header,\r\n  hgroup,\r\n  menu,\r\n  nav,\r\n  output,\r\n  ruby,\r\n  section,\r\n  summary,\r\n  time,\r\n  mark,\r\n  audio,\r\n  video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n  }\r\n\r\n  /* HTML5 display-role reset for older browsers */\r\n\r\n  article,\r\n  aside,\r\n  details,\r\n  figcaption,\r\n  figure,\r\n  footer,\r\n  header,\r\n  hgroup,\r\n  menu,\r\n  nav,\r\n  section {\r\n    display: block;\r\n  }\r\n\r\n  body {\r\n    line-height: 1;\r\n  }\r\n\r\n  ol,\r\n  ul {\r\n    list-style: none;\r\n  }\r\n\r\n  blockquote,\r\n  q {\r\n    quotes: none;\r\n  }\r\n\r\n  blockquote {\r\n\r\n    &:before,\r\n    &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n\r\n  q {\r\n\r\n    &:before,\r\n    &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  html {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n\r\n    user-select: none;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nimport { getChartData } from \"./redux/reducers/app\";\n\nimport App from \"./components/App/App\";\n\nimport { getStartDate } from \"./helpers/getStartDay\";\nimport { getEndDate } from \"./helpers/getEndDate\";\n\nimport GlobalStyles from \"./styles/globalStyles\";\n\nstore.dispatch(getChartData(getEndDate(7), getStartDate().toString()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}